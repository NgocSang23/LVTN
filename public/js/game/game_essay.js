// --- Khai b√°o c√°c bi·∫øn v√† kh·ªüi t·∫°o ban ƒë·∫ßu ---

// L·∫•y danh s√°ch c√°c c√¢u h·ªèi t·ª´ bi·∫øn to√†n c·ª•c `window.essayData`.
// N·∫øu bi·∫øn n√†y kh√¥ng t·ªìn t·∫°i, m·∫∑c ƒë·ªãnh s·∫Ω l√† m·ªôt m·∫£ng r·ªóng.
const essayQuestions = window.essayData || [];

// T·∫°o m·ªôt m·∫£ng ƒë·ªÉ l∆∞u tr·ªØ c√¢u tr·∫£ l·ªùi c·ªßa ng∆∞·ªùi d√πng cho t·ª´ng c√¢u h·ªèi.
// K√≠ch th∆∞·ªõc c·ªßa m·∫£ng n√†y b·∫±ng s·ªë l∆∞·ª£ng c√¢u h·ªèi, v√† ban ƒë·∫ßu t·∫•t c·∫£ c√°c ph·∫ßn t·ª≠ ƒë·ªÅu r·ªóng.
const answers = Array(essayQuestions.length).fill("");

// Bi·∫øn n√†y l∆∞u ch·ªâ s·ªë c·ªßa c√¢u h·ªèi hi·ªán t·∫°i ƒëang ƒë∆∞·ª£c hi·ªÉn th·ªã. B·∫Øt ƒë·∫ßu t·ª´ 0.
let currentIndex = 0;

// L·∫•y c√°c ph·∫ßn t·ª≠ HTML c·∫ßn thi·∫øt t·ª´ DOM.
const questionElem = document.getElementById("essayQuestion"); // √î hi·ªÉn th·ªã c√¢u h·ªèi
const answerElem = document.getElementById("essayAnswer"); // √î nh·∫≠p c√¢u tr·∫£ l·ªùi c·ªßa ng∆∞·ªùi d√πng

// --- C√°c h√†m ch·ª©c nƒÉng ch√≠nh ---

// H√†m n√†y c√≥ nhi·ªám v·ª• c·∫≠p nh·∫≠t giao di·ªán ƒë·ªÉ hi·ªÉn th·ªã c√¢u h·ªèi v√† c√¢u tr·∫£ l·ªùi t∆∞∆°ng ·ª©ng.
function renderEssay(index) {
    // Hi·ªÉn th·ªã n·ªôi dung c√¢u h·ªèi t·∫°i v·ªã tr√≠ 'index'.
    questionElem.innerHTML = essayQuestions[index].content;

    // Hi·ªÉn th·ªã c√¢u tr·∫£ l·ªùi ƒë√£ l∆∞u c·ªßa ng∆∞·ªùi d√πng (n·∫øu c√≥).
    answerElem.value = answers[index];

    // Reset k·∫øt qu·∫£ c·ªßa l·∫ßn ki·ªÉm tra tr∆∞·ªõc ƒë√≥ m·ªói khi chuy·ªÉn sang c√¢u h·ªèi m·ªõi.
    const resultContainer = document.querySelector("#resultContainer"); // Khu v·ª±c hi·ªÉn th·ªã ph·∫£n h·ªìi t·ª´ AI
    const percentBar = document.getElementById("essayProgressBar"); // Thanh ti·∫øn ƒë·ªô ƒë√°nh gi√°
    const loadingElem = document.querySelector("#essayLoading"); // Icon "ƒëang t·∫£i"

    if (resultContainer) resultContainer.innerHTML = ""; // X√≥a n·ªôi dung ph·∫£n h·ªìi.

    if (percentBar) {
        // ƒê·∫∑t l·∫°i thanh ti·∫øn ƒë·ªô v·ªÅ 0%.
        percentBar.style.width = "0%";
        percentBar.textContent = "0%";
        percentBar.setAttribute("aria-valuenow", 0);
        // ·∫®n thanh ti·∫øn ƒë·ªô ƒëi.
        percentBar.classList.add("d-none");
    }

    // ·∫®n icon "ƒëang t·∫£i".
    if (loadingElem) loadingElem.classList.add("d-none");
}

// H√†m n√†y x·ª≠ l√Ω vi·ªác chuy·ªÉn sang c√¢u h·ªèi ti·∫øp theo.
function nextEssay() {
    // L∆∞u c√¢u tr·∫£ l·ªùi hi·ªán t·∫°i c·ªßa ng∆∞·ªùi d√πng v√†o m·∫£ng `answers`.
    answers[currentIndex] = answerElem.value;

    // N·∫øu ch·ªâ c√≥ 1 c√¢u h·ªèi, kh√¥ng l√†m g√¨ c·∫£.
    if (essayQuestions.length <= 1) return;

    let newIndex;
    // Ch·ªçn m·ªôt ch·ªâ s·ªë ng·∫´u nhi√™n cho c√¢u h·ªèi m·ªõi, ƒë·∫£m b·∫£o n√≥ kh√¥ng tr√πng v·ªõi c√¢u h·ªèi hi·ªán t·∫°i.
    do {
        newIndex = Math.floor(Math.random() * essayQuestions.length);
    } while (newIndex === currentIndex);

    // C·∫≠p nh·∫≠t ch·ªâ s·ªë c√¢u h·ªèi hi·ªán t·∫°i.
    currentIndex = newIndex;
    // Hi·ªÉn th·ªã c√¢u h·ªèi m·ªõi.
    renderEssay(currentIndex);
}

// --- X·ª≠ l√Ω s·ª± ki·ªán (Event Handling) ---

// Ch·ªù cho to√†n b·ªô n·ªôi dung HTML c·ªßa trang ƒë∆∞·ª£c t·∫£i xong.
document.addEventListener("DOMContentLoaded", () => {
    // Hi·ªÉn th·ªã c√¢u h·ªèi ƒë·∫ßu ti√™n khi trang v·ª´a load.
    renderEssay(currentIndex);

    const nextButton = document.getElementById("nextEssayBtn");
    if (nextButton) {
        // G√°n s·ª± ki·ªán "click" cho n√∫t "C√¢u h·ªèi ti·∫øp theo".
        nextButton.addEventListener("click", nextEssay);
    }
});

// H√†m b·∫•t ƒë·ªìng b·ªô (async) ƒë·ªÉ g·ª≠i c√¢u tr·∫£ l·ªùi c·ªßa ng∆∞·ªùi d√πng v√† nh·∫≠n ph·∫£n h·ªìi t·ª´ AI.
async function checkEssayProgress() {
    // L∆∞u c√¢u tr·∫£ l·ªùi hi·ªán t·∫°i tr∆∞·ªõc khi x·ª≠ l√Ω.
    answers[currentIndex] = answerElem.value;

    const currentQuestion = essayQuestions[currentIndex];
    const userAnswer = answers[currentIndex].trim(); // L·∫•y c√¢u tr·∫£ l·ªùi v√† x√≥a kho·∫£ng tr·∫Øng th·ª´a.

    // L·∫•y CSRF token ƒë·ªÉ g·ª≠i k√®m theo y√™u c·∫ßu (ƒë·ªÉ ƒë·∫£m b·∫£o t√≠nh b·∫£o m·∫≠t).
    const csrfToken = document.querySelector('meta[name="csrf-token"]').content;
    const resultContainer = document.querySelector("#resultContainer");
    const loadingElem = document.querySelector("#essayLoading");
    const percentBar = document.getElementById("essayProgressBar");

    // N·∫øu ng∆∞·ªùi d√πng ch∆∞a nh·∫≠p c√¢u tr·∫£ l·ªùi, hi·ªÉn th·ªã th√¥ng b√°o l·ªói.
    if (!userAnswer) {
        resultContainer.innerHTML =
            "<p class='text-danger'>Vui l√≤ng nh·∫≠p c√¢u tr·∫£ l·ªùi tr∆∞·ªõc khi ki·ªÉm tra.</p>";
        return;
    }

    // X√≥a c√°c class CSS c≈© v√† n·ªôi dung c≈© ƒë·ªÉ chu·∫©n b·ªã hi·ªÉn th·ªã k·∫øt qu·∫£ m·ªõi.
    resultContainer.classList.remove(
        "text-danger",
        "text-success",
        "text-warning"
    );
    resultContainer.innerHTML = "";

    // Hi·ªÉn th·ªã icon "ƒëang t·∫£i" ƒë·ªÉ b√°o hi·ªáu cho ng∆∞·ªùi d√πng.
    if (loadingElem) loadingElem.classList.remove("d-none");

    try {
        // G·ª≠i y√™u c·∫ßu POST ƒë·∫øn API c·ªßa AI.
        const response = await fetch("/user/ai/check-answer", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "X-CSRF-TOKEN": csrfToken,
            },
            body: JSON.stringify({
                question_id: currentQuestion.id,
                answeruser_content: userAnswer,
            }),
        });

        // L·∫•y ph·∫£n h·ªìi t·ª´ m√°y ch·ªß d∆∞·ªõi d·∫°ng vƒÉn b·∫£n th√¥.
        let rawResponse = await response.text();
        console.log("üì• Ph·∫£n h·ªìi t·ª´ AI (th√¥):", rawResponse);

        let data = null;
        try {
            // Ki·ªÉm tra v√† ph√¢n t√≠ch ph·∫£n h·ªìi JSON.
            // C√≥ th·ªÉ ph·∫£n h·ªìi l√† m·ªôt chu·ªói JSON l·ªìng trong m·ªôt chu·ªói JSON kh√°c, n√™n c·∫ßn x·ª≠ l√Ω hai l·∫ßn.
            if (isJson(rawResponse)) {
                data = JSON.parse(rawResponse);
                if (isJson(data.response)) data = JSON.parse(data.response);
            } else {
                throw new Error("Ph·∫£n h·ªìi kh√¥ng ph·∫£i JSON");
            }
        } catch (err) {
            // N·∫øu c√≥ l·ªói khi ph√¢n t√≠ch JSON, hi·ªÉn th·ªã th√¥ng b√°o l·ªói.
            console.error("‚ùå L·ªói ƒë·ªãnh d·∫°ng JSON:", err);
            resultContainer.innerHTML = `<p class='text-danger fw-bold'>Ph·∫£n h·ªìi t·ª´ AI kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng. H√£y th·ª≠ l·∫°i sau.</p>`;
            if (loadingElem) loadingElem.classList.add("d-none");
            return;
        }

        // ·∫®n icon "ƒëang t·∫£i" sau khi c√≥ k·∫øt qu·∫£.
        if (loadingElem) loadingElem.classList.add("d-none");

        // Ki·ªÉm tra xem d·ªØ li·ªáu tr·∫£ v·ªÅ c√≥ h·ª£p l·ªá kh√¥ng (c√≥ ƒë·ªß feedback v√† category).
        if (
            !data ||
            typeof data.feedback !== "string" ||
            typeof data.category !== "string"
        ) {
            resultContainer.innerHTML =
                "<p class='text-danger fw-bold'>L·ªói ph·∫£n h·ªìi t·ª´ AI (thi·∫øu th√¥ng tin).</p>";
            return;
        }

        // D·ª±a v√†o category (lo·∫°i ƒë√°nh gi√°) ƒë·ªÉ g√°n class CSS ph√π h·ª£p (xanh, ƒë·ªè, v√†ng).
        let categoryClass = "text-warning";
        if (data.category.toLowerCase().includes("ch√≠nh x√°c"))
            categoryClass = "text-success";
        if (data.category.toLowerCase().includes("sai"))
            categoryClass = "text-danger";

        // L·∫•y ƒëi·ªÉm ph·∫ßn trƒÉm v√† c·∫≠p nh·∫≠t thanh ti·∫øn ƒë·ªô.
        const percent = typeof data.percent === "number" ? data.percent : 0;
        if (percentBar) {
            percentBar.style.width = percent + "%";
            percentBar.setAttribute("aria-valuenow", percent);
            percentBar.textContent = percent + "%";
            percentBar.classList.remove("d-none");
        }

        // Hi·ªÉn th·ªã k·∫øt qu·∫£ v√† ph·∫£n h·ªìi t·ª´ AI ra giao di·ªán.
        resultContainer.innerHTML = `
            <p class='fw-bold ${categoryClass}'>ƒê√°nh gi√°: ${data.category}</p>
            <p>${data.feedback}</p>
            ${
                // Hi·ªÉn th·ªã ƒë√°p √°n ƒë√∫ng n·∫øu c√≥.
                data.correct_answer
                    ? `<p class="text-muted fst-italic">ƒê√°p √°n ƒë√∫ng: ${data.correct_answer}</p>`
                    : ""
            }
        `;
    } catch (error) {
        // X·ª≠ l√Ω l·ªói n·∫øu c√≥ v·∫•n ƒë·ªÅ v·ªÅ k·∫øt n·ªëi.
        console.error("‚ùå L·ªói k·∫øt n·ªëi:", error);
        if (loadingElem) loadingElem.classList.add("d-none");
        resultContainer.innerHTML =
            "<p class='text-danger fw-bold'>L·ªói k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß.</p>";
    }
}

// H√†m ki·ªÉm tra xem m·ªôt chu·ªói c√≥ ph·∫£i l√† JSON h·ª£p l·ªá hay kh√¥ng.
function isJson(str) {
    try {
        JSON.parse(str);
        return true;
    } catch (e) {
        return false;
    }
}
